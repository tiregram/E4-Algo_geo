#pragma once

#include "myFace.hpp"
#include "myHalfedge.hpp"
#include "myMesh.hpp"
#include "myVertex.hpp"

extern myMesh *m;
extern myPoint3D *pickedpoint;
extern myHalfedge *closest_edge;
extern myVertex *closest_vertex;
extern myFace *closest_face;

enum MENU {
  MENU_CATMULLCLARK,
  MENU_DRAWWIREFRAME,
  MENU_EXIT,
  MENU_DRAWMESH,
  MENU_LOOP,
  MENU_DRAWMESHVERTICES,
  MENU_CONTRACTEDGE,
  MENU_CONTRACTFACE,
  MENU_DRAWCREASE,
  MENU_DRAWSILHOUETTE,
  MENU_GENERATE,
  MENU_CUT,
  MENU_INFLATE,
  MENU_SELECTEDGE,
  MENU_SELECTFACE,
  MENU_SELECTVERTEX,
  MENU_SHADINGTYPE,
  MENU_SMOOTHEN,
  MENU_SPLITEDGE,
  MENU_SPLITFACE,
  MENU_SPLITFACE4,
  MENU_SELECTCLEAR,
  MENU_TRIANGULATE,
  MENU_UNDO,
  MENU_WRITE,
  MENU_SIMPLIFY,
  MENU_DRAWNORMALS,
  MENU_OPENFILE,
  MENU_CHECK
};

enum {
  BUFFER_VERTICES = 0,
  BUFFER_NORMALS_PERFACE,
  BUFFER_NORMALS_PERVERTEX,
  BUFFER_VERTICESFORNORMALDRAWING,
  BUFFER_INDICES_TRIANGLES,
  BUFFER_INDICES_EDGES,
  BUFFER_INDICES_VERTICES
};

enum {
  VAO_TRIANGLES_NORMSPERVERTEX = 0,
  VAO_TRIANGLES_NORMSPERFACE,
  VAO_EDGES,
  VAO_VERTICES,
  VAO_NORMALS
};
